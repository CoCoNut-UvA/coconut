digraph Ast {
id;
id -> id[label="next"]
ienum;
ienum -> id[label="Vals"]
ienum -> id[label="name"]
ienum -> id[label="iprefix"]
ienum -> ienum[label="next"]
visit_sequence_visit;
visit_sequence_visit -> visit_sequence[label="next"]
visit_sequence_visit -> visit_sequence[color=red, label="sequence"]
visit_sequence_eval;
visit_sequence_eval -> visit_sequence[label="next"]
visit_sequence_eval -> equation[color=red, label="equation"]
visit_sequences;
visit_sequences -> visit_sequence[label="sequence"]
visit_sequences -> visit_sequences[label="next"]
attribute_reference;
attribute_reference -> id[label="inode"]
attribute_reference -> id[label="iattribute"]
attribute_reference -> id[color=red, label="node_type"]
attribute_reference -> attribute[color=red, label="reference"]
attribute_reference -> child[color=red, label="child_reference"]
equation_dependency;
equation_dependency -> attribute_reference[label="iattribute"]
equation_dependency -> equation_dependency[label="next"]
equation;
equation -> attribute_reference[label="rule"]
equation -> equation_dependency[label="iargs"]
equation -> equation[label="next"]
attribute;
attribute -> id[label="name"]
attribute -> id[label="type_reference"]
attribute -> ilifetime[label="lifetimes"]
attribute -> attribute[label="next"]
itravdata;
itravdata -> id[label="name"]
itravdata -> id[label="type_reference"]
itravdata -> itravdata[label="next"]
setoperation;
setoperation -> setexpr[label="left"]
setoperation -> setexpr[label="right"]
setliteral;
setliteral -> id[label="reference"]
setliteral -> setliteral[label="left"]
setliteral -> setliteral[label="right"]
setreference;
setreference -> id[label="reference"]
ste;
ste -> ste[label="next"]
ste -> id[color=red, label="key"]
ste -> link[color=red, label="value"]
child;
child -> id[label="name"]
child -> ilifetime[label="lifetimes"]
child -> child[label="next"]
child -> id[label="type_reference"]
lifetime_range;
lifetime_range -> id[label="target"]
ilifetime;
ilifetime -> lifetime_range[label="begin"]
ilifetime -> lifetime_range[label="end"]
ilifetime -> ilifetime[label="next"]
nodeset_child_entry;
nodeset_child_entry -> nodeset_child_entry[label="next"]
nodeset_child_entry -> inodeset[color=red, label="reference"]
inodeset;
inodeset -> id[label="name"]
inodeset -> setexpr[label="expr"]
inodeset -> attribute[label="iattributes"]
inodeset -> id[label="unpacked"]
inodeset -> inodeset[label="next"]
inodeset -> nodeset_child_entry[label="children_table"]
inodeset -> visit_sequences[label="visit_sequences"]
inode;
inode -> id[label="name"]
inode -> inode[label="next"]
inode -> child[label="ichildren"]
inode -> attribute[label="iattributes"]
inode -> equation[label="iequations"]
inode -> ilifetime[label="lifetimes"]
inode -> visit_sequences[label="visit_sequences"]
ipass;
ipass -> id[label="name"]
ipass -> id[label="iprefix"]
ipass -> id[label="target_func"]
ipass -> ipass[label="next"]
itraversal;
itraversal -> id[label="name"]
itraversal -> id[label="iprefix"]
itraversal -> setexpr[label="inodes"]
itraversal -> itravdata[label="data"]
itraversal -> itraversal[label="next"]
iphase;
iphase -> id[label="name"]
iphase -> id[label="iprefix"]
iphase -> id[label="gate_func"]
iphase -> iactions[label="iactions"]
iphase -> iphase[label="next"]
iactions;
iactions -> id[label="reference"]
iactions -> iactions[label="next"]
ast;
ast -> iphase[label="iphases"]
ast -> itraversal[label="itraversals"]
ast -> ipass[label="ipasses"]
ast -> inode[label="inodes"]
ast -> inodeset[label="inodesets"]
ast -> ienum[label="enums"]
ast -> ste[label="stable"]
ast -> inode[color=red, label="root_node"]
ast -> iphase[color=red, label="start_phase"]
visit_sequence;
visit_sequence -> visit_sequence_eval [color=blue]
visit_sequence -> visit_sequence_visit [color=blue]
setexpr;
setexpr -> setoperation [color=blue]
setexpr -> setreference [color=blue]
setexpr -> setliteral [color=blue]
link;
link -> iphase [color=blue]
link -> itraversal [color=blue]
link -> ipass [color=blue]
link -> inode [color=blue]
link -> inodeset [color=blue]
link -> id [color=blue]
action;
action -> iphase [color=blue]
action -> itraversal [color=blue]
action -> ipass [color=blue]
}
